/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package schoolproject;

import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*;  
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.*;  
import javax.mail.internet.*;  
import javax.activation.*;  
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class StudentDataSection extends javax.swing.JFrame {

    /**
     * Creates new form StudentDataSection
     */
    private String teacherID="IM78",Administrator_ID="";
    ArrayList<StudentGrd1> S = new ArrayList<>(); int a = 0;
    public StudentDataSection(String teacherID) {
        initComponents();
        this.teacherID = teacherID;
        tableFill();
    }

    StudentDataSection() {
        initComponents();
        tableFill();
         //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JTabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        Grade2 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtStuName = new javax.swing.JTextField();
        txtStuID = new javax.swing.JTextField();
        txtClass = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtStreet = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtSinhala = new javax.swing.JTextField();
        txtEnglish = new javax.swing.JTextField();
        txtMaths = new javax.swing.JTextField();
        txtHistory = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnEmail = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtParent = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtTelephone = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtGrade = new javax.swing.JTextField();
        btnSignOut = new javax.swing.JButton();
        txtDob = new javax.swing.JTextField();
        Grade3 = new javax.swing.JPanel();
        Grade4 = new javax.swing.JPanel();
        Grade5 = new javax.swing.JPanel();
        Grade6 = new javax.swing.JPanel();
        Grade7 = new javax.swing.JPanel();
        PastPapers = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        txtPastPprID = new javax.swing.JTextField();
        btnUpload = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        txtPastPprLoc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));

        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Student Name", "Student ID", "Class", "Username", "Password", "Email", "Date of Birth", "Parents Name", "Zip Code", "Street", "City", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInfoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInfo);
        if (tblInfo.getColumnModel().getColumnCount() > 0) {
            tblInfo.getColumnModel().getColumn(0).setHeaderValue("Student Name");
            tblInfo.getColumnModel().getColumn(1).setHeaderValue("Student ID");
            tblInfo.getColumnModel().getColumn(2).setHeaderValue("Class");
            tblInfo.getColumnModel().getColumn(3).setHeaderValue("Username");
            tblInfo.getColumnModel().getColumn(4).setHeaderValue("Password");
            tblInfo.getColumnModel().getColumn(5).setHeaderValue("Email");
            tblInfo.getColumnModel().getColumn(6).setHeaderValue("Date of Birth");
            tblInfo.getColumnModel().getColumn(7).setHeaderValue("Parents Name");
            tblInfo.getColumnModel().getColumn(8).setHeaderValue("Zip Code");
            tblInfo.getColumnModel().getColumn(9).setHeaderValue("Street");
            tblInfo.getColumnModel().getColumn(10).setHeaderValue("City");
            tblInfo.getColumnModel().getColumn(11).setHeaderValue("State");
        }

        jLabel16.setText("Postal Address");

        jLabel17.setText("Street");

        jLabel2.setText("Student Name");

        jLabel3.setText("Student ID");

        jLabel4.setText("Class");

        jLabel5.setText("Username");

        jLabel6.setText("General Information");

        jLabel7.setText("Password");

        jLabel8.setText("Email");

        jLabel9.setText("Date of Birth");

        jLabel11.setText("Subject Marks");

        jLabel12.setText("Sinhala");

        jLabel13.setText("English");

        jLabel14.setText("Maths");

        jLabel15.setText("History");

        jLabel18.setText("City");

        jLabel19.setText("Zip Code");

        jLabel20.setText("State");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnEmail.setText("Report Email");
        btnEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmailActionPerformed(evt);
            }
        });

        jLabel10.setText("Parents Name");

        jLabel21.setText("Telephone No.");

        jLabel23.setText("Grade");

        btnSignOut.setText("Sign out");
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Grade2Layout = new javax.swing.GroupLayout(Grade2);
        Grade2.setLayout(Grade2Layout);
        Grade2Layout.setHorizontalGroup(
            Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Grade2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Grade2Layout.createSequentialGroup()
                        .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Grade2Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Grade2Layout.createSequentialGroup()
                                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(Grade2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(55, 55, 55)
                                        .addComponent(txtDob))
                                    .addGroup(Grade2Layout.createSequentialGroup()
                                        .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addGap(45, 45, 45)
                                        .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtEmail)
                                            .addComponent(txtStuName)
                                            .addComponent(txtStuID)
                                            .addComponent(txtClass)
                                            .addComponent(txtUsername)
                                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                                            .addComponent(txtGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(81, 81, 81))
                    .addGroup(Grade2Layout.createSequentialGroup()
                        .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(Grade2Layout.createSequentialGroup()
                                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(40, 40, 40)
                                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtSinhala, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEnglish, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addGap(40, 40, 40)
                                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtHistory, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMaths, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel10)
                            .addGroup(Grade2Layout.createSequentialGroup()
                                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20))
                                .addGap(51, 51, 51)
                                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtStreet)
                                    .addComponent(txtZipCode)
                                    .addComponent(txtCity)
                                    .addComponent(txtState)
                                    .addComponent(txtParent, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel23)
                            .addGroup(Grade2Layout.createSequentialGroup()
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnInsert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEmail))
                            .addComponent(btnSignOut)
                            .addComponent(jLabel16))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        Grade2Layout.setVerticalGroup(
            Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Grade2Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(28, 28, 28)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Grade2Layout.createSequentialGroup()
                        .addComponent(txtStuName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStuID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(21, 21, 21)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Grade2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Grade2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtParent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Grade2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Grade2Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Grade2Layout.createSequentialGroup()
                                .addComponent(txtMaths, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(Grade2Layout.createSequentialGroup()
                            .addComponent(txtSinhala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtEnglish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Grade2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate)
                        .addComponent(btnDelete)
                        .addComponent(btnInsert)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSignOut)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(Grade2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1120, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Grade2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JTabbedPane.addTab("Grade 2", jPanel2);

        javax.swing.GroupLayout Grade3Layout = new javax.swing.GroupLayout(Grade3);
        Grade3.setLayout(Grade3Layout);
        Grade3Layout.setHorizontalGroup(
            Grade3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1482, Short.MAX_VALUE)
        );
        Grade3Layout.setVerticalGroup(
            Grade3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 785, Short.MAX_VALUE)
        );

        JTabbedPane.addTab("Grade 3", Grade3);

        javax.swing.GroupLayout Grade4Layout = new javax.swing.GroupLayout(Grade4);
        Grade4.setLayout(Grade4Layout);
        Grade4Layout.setHorizontalGroup(
            Grade4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1482, Short.MAX_VALUE)
        );
        Grade4Layout.setVerticalGroup(
            Grade4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 785, Short.MAX_VALUE)
        );

        JTabbedPane.addTab("Grade 4", Grade4);

        javax.swing.GroupLayout Grade5Layout = new javax.swing.GroupLayout(Grade5);
        Grade5.setLayout(Grade5Layout);
        Grade5Layout.setHorizontalGroup(
            Grade5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1482, Short.MAX_VALUE)
        );
        Grade5Layout.setVerticalGroup(
            Grade5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 785, Short.MAX_VALUE)
        );

        JTabbedPane.addTab("Grade 5", Grade5);

        javax.swing.GroupLayout Grade6Layout = new javax.swing.GroupLayout(Grade6);
        Grade6.setLayout(Grade6Layout);
        Grade6Layout.setHorizontalGroup(
            Grade6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1482, Short.MAX_VALUE)
        );
        Grade6Layout.setVerticalGroup(
            Grade6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 785, Short.MAX_VALUE)
        );

        JTabbedPane.addTab("Grade 6", Grade6);

        javax.swing.GroupLayout Grade7Layout = new javax.swing.GroupLayout(Grade7);
        Grade7.setLayout(Grade7Layout);
        Grade7Layout.setHorizontalGroup(
            Grade7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1482, Short.MAX_VALUE)
        );
        Grade7Layout.setVerticalGroup(
            Grade7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 785, Short.MAX_VALUE)
        );

        JTabbedPane.addTab("Grade 7", Grade7);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Past Paper ID", "Past Paper"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel22.setText("Past Paper ID");

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        jLabel24.setText("Past Paper Location");

        javax.swing.GroupLayout PastPapersLayout = new javax.swing.GroupLayout(PastPapers);
        PastPapers.setLayout(PastPapersLayout);
        PastPapersLayout.setHorizontalGroup(
            PastPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PastPapersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PastPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PastPapersLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPastPprID, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176))
                    .addGroup(PastPapersLayout.createSequentialGroup()
                        .addGroup(PastPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpload)
                            .addGroup(PastPapersLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addGap(18, 18, 18)
                                .addComponent(txtPastPprLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(102, 102, 102)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(413, Short.MAX_VALUE))
        );
        PastPapersLayout.setVerticalGroup(
            PastPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PastPapersLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 320, Short.MAX_VALUE))
            .addGroup(PastPapersLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(PastPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtPastPprID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PastPapersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtPastPprLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addComponent(btnUpload)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JTabbedPane.addTab("Past Papers", PastPapers);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setText("Student Details Section");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(455, 455, 455))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 815, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String sql = "DELETE FROM student WHERE Student_ID=?";
        String sql1 = "DELETE FROM student_telephone_no WHERE Student_ID=?";
 DBConfig db = new DBConfig();
		
try (Connection conn = DriverManager.getConnection(db.CONN_STRING, db.USERNAME, db.PASSWORD)) {
        PreparedStatement statement = conn.prepareStatement(sql);
        PreparedStatement statement1 = conn.prepareStatement(sql1);
        statement.setString(1, txtStuID.getText());
        statement1.setString(1, txtStuID.getText());
 
int rowsDeleted = statement.executeUpdate();
int rowsDeleted1 = statement1.executeUpdate();
if (rowsDeleted > 0 && rowsDeleted1>0) {
    System.out.println("A user was deleted successfully!");
}
}
catch (SQLException ex) {
            Logger.getLogger(StudentDataSection.class.getName()).log(Level.SEVERE, null, ex);
        }
StudentDataSection sds = new StudentDataSection();
        sds.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String sql = "UPDATE student SET Name=?,DOB=?,Grade=?, Class=?, Email=?,Password=?,Street=?,Zip_code=?, City=?, State=?,Parent_Name=? WHERE Student_ID=?";
 DBConfig db = new DBConfig();
		
try (Connection conn = DriverManager.getConnection(db.CONN_STRING, db.USERNAME, db.PASSWORD)) {
PreparedStatement statement = conn.prepareStatement(sql);
statement.setString(12, txtStuID.getText());
        statement.setString(1, txtStuName.getText());
        statement.setString(2, txtDob.getText());
        statement.setInt(3, Integer.parseInt(txtGrade.getText()));
        statement.setString(4, txtClass.getText());
        statement.setString(5, txtEmail.getText());
        statement.setString(6, txtPassword.getText());
        statement.setString(7, txtStreet.getText());
        statement.setString(8, txtZipCode.getText());
        statement.setString(9, txtCity.getText());
        statement.setString(10, txtState.getText());
        statement.setString(11, txtParent.getText());
        
         String sql1 = "UPDATE student_telephone_no SET Telephone_No=? WHERE Student_ID=?";
         PreparedStatement statement1 = conn.prepareStatement(sql1);
         statement1.setString(1, txtStuID.getText());
         statement1.setString(2, txtTelephone.getText());
 
         String sql2 = "UPDATE studies SET Mark=? WHERE Student_ID=? AND subject_ID=?;";
        PreparedStatement statement5 = conn.prepareStatement(sql2);
        statement5.setString(3, "Maths1");
        statement5.setString(2, txtStuID.getText());
        statement5.setInt(1, Integer.parseInt(Validatemarks(txtMaths.getText())));
       
       
       
        statement5.setString(3, "Sinhala1");
        statement5.setString(2, txtStuID.getText());
        statement5.setInt(1, Integer.parseInt(Validatemarks(txtSinhala.getText())));
        
        
        statement5.setString(3, "History1");
        statement5.setString(2, txtStuID.getText());
        statement5.setInt(1, Integer.parseInt(Validatemarks(txtHistory.getText())));
        
        
        statement5.setString(3, "English1");
        statement5.setString(2, txtEnglish.getText());
        statement5.setInt(1, Integer.parseInt(Validatemarks(txtEnglish.getText())));
        
int rowsUpdated = statement.executeUpdate();
if (rowsUpdated > 0) {
    System.out.println("An existing user was updated successfully!");
}
} catch (SQLException ex) {
            Logger.getLogger(StudentDataSection.class.getName()).log(Level.SEVERE, null, ex);
        }
StudentDataSection sds = new StudentDataSection();
        sds.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmailActionPerformed
       
  final String user="";
  final String password="";
    
  String to=txtEmail.getText();
  
   Properties props = new Properties();  
   
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "465");
        props.put("mail.smtp.ssl.enable", "true");
        props.put("mail.smtp.auth", "true");
     
   Session session = Session.getDefaultInstance(props,  
    new javax.mail.Authenticator() {  
      protected PasswordAuthentication getPasswordAuthentication() {  
    return new PasswordAuthentication(user,password);  
      }  
    });  

    try {  
     MimeMessage message = new MimeMessage(session);  
     message.setFrom(new InternetAddress(user));  
     message.addRecipient(Message.RecipientType.TO,new InternetAddress(to));  
     message.setSubject("Student Data");  
     message.setText("Dear Sir, \n Exam Marks\n English: " + txtEnglish.getText()+"\n Maths: " + txtMaths.getText() + "\n Sinhala: " + txtSinhala.getText() + "\n History: " + txtHistory.getText() +"\n Thank you!" );  
         
     Transport.send(message);  
  
     System.out.println("message sent successfully...");  
   
     } catch (MessagingException e) { 
        System.out.println(e.getMessage());
                }
    }//GEN-LAST:event_btnEmailActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
       
        DBConfig db = new DBConfig();
	String email = 	emailValidate(txtEmail.getText());
try (Connection conn = DriverManager.getConnection(db.CONN_STRING, db.USERNAME, db.PASSWORD)) {
        String sql = "INSERT INTO student (Student_ID,Name,DOB,Grade, Class, Email,Password,Street,Zip_code, City, State,Parent_Name,Teacher_ID, Administrator_ID) VALUES (?,?, ?, ?, ?,?,?, ?, ?, ?,?, ?, ?,?);";
 
        String Administrator_ID="IMPrincipal";
        PreparedStatement statement = conn.prepareStatement(sql);
        statement.setString(1, txtStuID.getText());
        statement.setString(2, txtStuName.getText());
        statement.setString(3, txtDob.getText());
        statement.setInt(4, Integer.parseInt(txtGrade.getText()));
        statement.setString(5, (txtClass.getText()));
        statement.setString(6, email);
        statement.setString(7, txtPassword.getText());
        statement.setString(8, txtStreet.getText());
        statement.setString(9, txtZipCode.getText());
        statement.setString(10, txtCity.getText());
        statement.setString(11, txtState.getText());
        statement.setString(12, txtParent.getText());
        statement.setString(13, teacherID);
        statement.setString(14, Administrator_ID);
        
        String tele = TeleValidate(txtTelephone.getText());
        String sql5 = "INSERT INTO student_telephone_no (Student_ID,Telephone_No) VALUES (?,?);";
        PreparedStatement statement5 = conn.prepareStatement(sql5);
        statement5.setString(1, txtStuID.getText());
        statement5.setInt(2, Integer.parseInt(tele));
        statement5.execute();
        int rowsInserted = statement.executeUpdate();
        if (rowsInserted > 0) {
            System.out.println("A new user was inserted successfully!");
        }
        
        String sql1 = "INSERT INTO studies (subject_ID,student_ID,Mark) VALUES (?,?, ?);";
        PreparedStatement statement1 = conn.prepareStatement(sql1);
        statement1.setString(1, "Maths1");
        statement1.setString(2, txtStuID.getText());
        statement1.setInt(3, Integer.parseInt(Validatemarks(txtMaths.getText())));
        int rowsInserted1 = statement1.executeUpdate();
       
        String sql2 = "INSERT INTO studies (subject_ID,student_ID,Mark) VALUES (?,?, ?);";
        PreparedStatement statement2 = conn.prepareStatement(sql2);
        statement2.setString(1, "Sinhala1");
        statement2.setString(2, txtStuID.getText());
        statement2.setInt(3, Integer.parseInt(Validatemarks(txtSinhala.getText())));
         int rowsInserted2 = statement2.executeUpdate();
        
        String sql3 = "INSERT INTO studies (subject_ID,student_ID,Mark) VALUES (?,?, ?);";
        PreparedStatement statement3 = conn.prepareStatement(sql3);
        statement3.setString(1, "History1");
        statement3.setString(2, txtStuID.getText());
        statement3.setInt(3, Integer.parseInt(Validatemarks(txtHistory.getText())));
          int rowsInserted3 = statement3.executeUpdate();
        
        String sql4 = "INSERT INTO studies (subject_ID,student_ID,Mark) VALUES (?,?, ?);";
        PreparedStatement statement4 = conn.prepareStatement(sql4);
        statement4.setString(1, "English1");
        statement4.setString(2, txtStuID.getText());
        statement4.setInt(3, Integer.parseInt(Validatemarks(txtEnglish.getText())));
      
        int rowsInserted4 = statement4.executeUpdate();
        if (rowsInserted1 > 0 && rowsInserted2>0 && rowsInserted3>0 && rowsInserted4>0) {
            System.out.println("A new user was inserted successfully!");
        }
}       catch (Exception ex) {
            Logger.getLogger(StudentDataSection.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
        StudentDataSection sds = new StudentDataSection();
        sds.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        String fileLocation = txtPastPprLoc.getText();
        String fID = txtPastPprID.getText();
        File pdfFile = new File(fileLocation);
        byte[] pdfData = new byte[(int) pdfFile.length()];
        try (DataInputStream dis = new DataInputStream(new FileInputStream(pdfFile))) {
            dis.readFully(pdfData);  
        } catch (FileNotFoundException ex) {
            Logger.getLogger(StudentDataSection.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(StudentDataSection.class.getName()).log(Level.SEVERE, null, ex);
        } 
        DBConfig db = new DBConfig();
		
try (Connection conn = DriverManager.getConnection(db.CONN_STRING, db.USERNAME, db.PASSWORD)) {
        
        String q = "INSERT INTO past_papers (Past_Paper_ID, Past_Paper) VALUES (?,?)";
        PreparedStatement pst = conn.prepareStatement(q);
        pst = conn.prepareStatement(q);
        pst.setString(1, fID);
        pst.setBytes(2, pdfData);  // byte[] array
        pst.executeUpdate();
        
        System.out.println("Uploaded Successfully");}
    catch (SQLException ex) {
            Logger.getLogger(StudentDataSection.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
            ModeSelect tl = new ModeSelect();
            tl.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void tblInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInfoMouseClicked
        
        int rowSelect1 = tblInfo.getSelectedRow();
        txtUsername.setText((String) tblInfo.getValueAt(rowSelect1,3));
        txtStuID.setText((String) tblInfo.getValueAt(rowSelect1,1));
        txtStuName.setText((String) tblInfo.getValueAt(rowSelect1,0));
        txtPassword.setText((String) tblInfo.getValueAt(rowSelect1,4));
        txtEmail.setText((String) tblInfo.getValueAt(rowSelect1,5));
        txtClass.setText((String) tblInfo.getValueAt(rowSelect1,2));
        txtGrade.setText("2");
        txtDob.setText((String) tblInfo.getValueAt(rowSelect1,6));
        txtParent.setText((String) tblInfo.getValueAt(rowSelect1,7));
        txtZipCode.setText((String) tblInfo.getValueAt(rowSelect1,8));
        txtStreet.setText((String) tblInfo.getValueAt(rowSelect1,9));
        txtCity.setText((String) tblInfo.getValueAt(rowSelect1,10));
        txtState.setText((String) tblInfo.getValueAt(rowSelect1,11));
        
        
        DBConfig db = new DBConfig();
		
		try (Connection conn = DriverManager.getConnection(db.CONN_STRING, db.USERNAME, db.PASSWORD)) {  

                            
			String sql1 = "SELECT * FROM studies WHERE Student_ID=? AND Subject_ID=?";
                        PreparedStatement pstm1= conn.prepareStatement(sql1); 
                        pstm1.setString(1,txtStuID.getText());
                        Integer k;
                        pstm1.setString(2, "English1");
                        ResultSet rs1=pstm1.executeQuery();
                        rs1.next();
                        k=rs1.getInt(3);
                        txtEnglish.setText(k.toString());
                        
                       PreparedStatement pstm2= conn.prepareStatement(sql1);  
                        pstm2.setString(1,txtStuID.getText());
                        Integer k1;
                        pstm2.setString(2, "Maths1");
                        ResultSet rs2=pstm2.executeQuery();
                        rs2.next();
                        k1=rs2.getInt(3);
                        txtMaths.setText(k1.toString());
                        
                        PreparedStatement pstm3= conn.prepareStatement(sql1);  
                        pstm3.setString(1,txtStuID.getText());
                        Integer k2;
                        pstm3.setString(2, "History1");
                        ResultSet rs3=pstm3.executeQuery();
                        rs3.next();
                        k2=rs3.getInt(3);
                        txtHistory.setText(k2.toString());
                        
                        PreparedStatement pstm4= conn.prepareStatement(sql1);  
                        pstm4.setString(1,txtStuID.getText());
                        Integer k3;
                        pstm4.setString(2, "Sinhala1");
                        ResultSet rs4=pstm4.executeQuery();
                        rs4.next();
                        k3=rs4.getInt(3);
                        txtSinhala.setText(k3.toString());
                        
                        String sql2 = "SELECT * FROM student_telephone_no WHERE Student_ID=?";
                        PreparedStatement pstm5= conn.prepareStatement(sql2); 
                        pstm5.setString(1,txtStuID.getText());
                        
                        ResultSet rs5=pstm5.executeQuery();
			while (rs5.next()){
				txtTelephone.setText(rs5.getString(2));}
                        
                } catch (Exception ex) {
            Logger.getLogger(StudentDataSection.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
    }//GEN-LAST:event_tblInfoMouseClicked

    private void tableFill(){
        DBConfig db = new DBConfig();
		
		try (Connection conn = DriverManager.getConnection(db.CONN_STRING, db.USERNAME, db.PASSWORD)) {  

                            
			String sql = "SELECT * FROM student WHERE Grade = 2";
                        Statement statement = conn.createStatement();
                        ResultSet rs = statement.executeQuery(sql);
                       
			while (rs.next()){ 
                                
                               
                                StudentGrd1 F = new StudentGrd1(rs.getString(1), rs.getString(2),rs.getDate(3), rs.getInt(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11),rs.getString(12));
                                S.add(F);

			}
                          SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
                        for(StudentGrd1 g : S){
                            //int c = 0;
                         
                            String d = dateFormat.format(g.getDob());
                            tblInfo.setValueAt(g.getName(), a, 0);
                            tblInfo.setValueAt(g.getID(), a, 1);
                            tblInfo.setValueAt(g.getSclass(), a, 2);
                            tblInfo.setValueAt(g.getName(), a, 3);
                            tblInfo.setValueAt(g.getPassword(), a, 4);
                            tblInfo.setValueAt(g.getEmail(), a, 5);
                            tblInfo.setValueAt(d, a, 6);
                            tblInfo.setValueAt(g.getParentName(), a, 7);
                            tblInfo.setValueAt(g.getZipCode(), a, 8);
                            tblInfo.setValueAt(g.getStreet(), a, 9);
                            tblInfo.setValueAt(g.getCity(), a, 10);
                            tblInfo.setValueAt(g.getState(), a, 11);
                            
                            a++;
                       }
                        
                        
			
		} catch (SQLException ex) {
                    System.out.println(ex);
		}		
	
    }
    String emailValidate(String email){
        
      String regex = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";   
      Pattern pattern = Pattern.compile(regex);
      Matcher matcher = pattern.matcher(email);
     
      if (matcher.matches()) {
    	  System.out.println("Email Valid");
          return email;
      }
      else
      {
          JOptionPane.showMessageDialog(this, "Email in the Wrong Form", "Error", JOptionPane.ERROR_MESSAGE);
    	  System.out.println("Email must be in the form XXX@XXXXXXX");
          return "";
      }
    } 
    String TeleValidate(String telephone){
      Pattern pattern = Pattern.compile("\\d{10}");
      Matcher matcher = pattern.matcher(telephone);
     
      if (matcher.matches()) {
    	  System.out.println("Telephone Valid");
          return telephone;
      }
      else
      {
          JOptionPane.showMessageDialog(this, "Telephone in the Wrong Form", "Error", JOptionPane.ERROR_MESSAGE);
    	  System.out.println("Telephone must be in the form XXXXXXXXXX");
          return "";
      }
    } 
    String Validatemarks(String marks){
        Integer m = Integer.parseInt(marks);
        
      if (m<=100 && m>=0) {
    	  System.out.println("marks Valid");
          return marks;
      }
      else
      {
          JOptionPane.showMessageDialog(this, "marks in the Wrong Form", "Error", JOptionPane.ERROR_MESSAGE);
    	  System.out.println("marks must be in the form XX");
          return "0";
      }
    } 
    String ValidateGrade(String grade){
        Integer g = Integer.parseInt(grade);
        
      if (g<=13 && g>=1) {
    	  System.out.println("grade Valid");
          return grade;
      }
      else
      {
          JOptionPane.showMessageDialog(this, "marks in the Wrong Form", "Error", JOptionPane.ERROR_MESSAGE);
    	  System.out.println("marks must be in the form XX");
          return "0";
      }
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentDataSection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentDataSection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentDataSection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentDataSection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentDataSection().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Grade2;
    private javax.swing.JPanel Grade3;
    private javax.swing.JPanel Grade4;
    private javax.swing.JPanel Grade5;
    private javax.swing.JPanel Grade6;
    private javax.swing.JPanel Grade7;
    private javax.swing.JTabbedPane JTabbedPane;
    private javax.swing.JPanel PastPapers;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEmail;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblInfo;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtClass;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEnglish;
    private javax.swing.JTextField txtGrade;
    private javax.swing.JTextField txtHistory;
    private javax.swing.JTextField txtMaths;
    private javax.swing.JTextField txtParent;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPastPprID;
    private javax.swing.JTextField txtPastPprLoc;
    private javax.swing.JTextField txtSinhala;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtStuID;
    private javax.swing.JTextField txtStuName;
    private javax.swing.JTextField txtTelephone;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
